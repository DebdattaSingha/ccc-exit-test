#include <iostream>
using namespace std;
struct ListNode {
    int val;
    ListNode* next;
    ListNode(int x) : val(x), next(NULL) {}
};
ListNode* removeGreaterThanX(ListNode* head, int x) {
    ListNode* curr = head;
    ListNode* prev = NULL; 
    while (curr != NULL) {
        if (curr->val > x) {
            if (curr == head) {
                head = head->next;
            } else {
                prev->next = curr->next;
            }
        } else {
            prev = curr;
        }
        curr = curr->next;
    }
    return head;
}
int main() {
    ListNode* head = NULL;
    ListNode* tail = NULL;
    int n, x, val;
    cin >> n;
    for (int i = 0; i < n; i++) {
        cin >> val;
        ListNode* newNode = new ListNode(val);
        if (head == NULL) {
            head = newNode;
            tail = newNode;
        } else {
            tail->next = newNode;
            tail = newNode;
        }
    }
    cin >> x;
    head = removeGreaterThanX(head, x);
    ListNode* curr = head;
    while (curr != NULL) {
        cout << curr->val << "\n";
        curr = curr->next;
    }  
return 0;
}
